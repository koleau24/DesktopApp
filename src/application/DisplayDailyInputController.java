package application;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.TableColumn;

public class DisplayDailyInputController implements Initializable 
{
	@FXML
	private TextField id1;
	@FXML
	private TextField dd;
	@FXML
	private TextField mm;
	@FXML
	private TextField yy;
	
	@FXML
	private TableView<DisplayDailyInput> tableDisplay;
	@FXML
	private TableColumn<?, ?> id;
	@FXML
	private TableColumn<?, ?> name;
	@FXML
	private TableColumn<?, ?> date;
	@FXML
	private TableColumn<?, ?> wh;
	@FXML
	private TableColumn<?, ?> machine;
	@FXML
	private TableColumn<?, ?> process;
	@FXML
	private TableColumn<?, ?> shift;
	@FXML
	private TableColumn<?, ?> ot;
	@FXML
	private TableColumn<?, ?> eop;
	@FXML
	private TableColumn<?, ?> aop;
	@FXML
	private TableColumn<?, ?> me;
	@FXML
	private TableColumn<?, ?> rajection;
	@FXML
	private TableColumn<?, ?> effi;
	private Connection con = null;
	private PreparedStatement ps = null;
	private ResultSet rs = null;
	private ObservableList <DisplayDailyInput> data;
	
	public void initialize(URL arg0, ResourceBundle arg1) 
	{
		try 
		{
			con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/factory","root","root");
			data=FXCollections.observableArrayList();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		//setCellTable();
	}
	private void setCellTable() 
	{
		id.setCellValueFactory(new PropertyValueFactory<>("id"));
		name.setCellValueFactory(new PropertyValueFactory<>("name"));
		date.setCellValueFactory(new PropertyValueFactory<>("date"));
		wh.setCellValueFactory(new PropertyValueFactory<>("wh"));
		machine.setCellValueFactory(new PropertyValueFactory<>("machine"));
		process.setCellValueFactory(new PropertyValueFactory<>("process"));
		shift.setCellValueFactory(new PropertyValueFactory<>("shift"));
		ot.setCellValueFactory(new PropertyValueFactory<>("ot"));
		eop.setCellValueFactory(new PropertyValueFactory<>("eop"));
		aop.setCellValueFactory(new PropertyValueFactory<>("aop"));
		me.setCellValueFactory(new PropertyValueFactory<>("me"));
		rajection.setCellValueFactory(new PropertyValueFactory<>("rejection"));
		effi.setCellValueFactory(new PropertyValueFactory<>("efficiency"));
		
	}

	// Event Listener on Button.onAction
	@FXML
	public void show(ActionEvent event) 
	{
		// TODO Autogenerated
		boolean flag=false;
		flag=id1.getText().trim().isEmpty();
		if(flag==true)
		{
			Stage dialogStage = new Stage();
		    dialogStage.initModality(Modality.WINDOW_MODAL);

		    VBox vbox = new VBox(new Text("Enter valid employee ID"));
		    vbox.setAlignment(Pos.CENTER);
		    vbox.setPadding(new Insets(15));
		    vbox.setPrefSize(400, 100);

		    dialogStage.setScene(new Scene(vbox));
		    dialogStage.show();
		}
		if(flag==false)
		{
			for(int i=0;i<tableDisplay.getItems().size();i++) 
			{
				tableDisplay.getItems().clear();
			}
			setCellTable();
			loadDataFromDatabase();
		}
	}
	private void loadDataFromDatabase() 
	{
		try 
		{
			int t=Integer.parseInt(id1.getText()); 
			ps=con.prepareStatement("Select * from dailyinput where id="+t);
			System.out.println(t);
			rs=ps.executeQuery();
			/*if(rs.next()==false)
			{
				Stage dialogStage = new Stage();
			    dialogStage.initModality(Modality.WINDOW_MODAL);

			    VBox vbox = new VBox(new Text("Record not found for given employee ID"));
			    vbox.setAlignment(Pos.CENTER);
			    vbox.setPadding(new Insets(15));
			    vbox.setPrefSize(400, 100);

			    dialogStage.setScene(new Scene(vbox));
			    dialogStage.show();
				
			}*/
			while(rs.next())
			{
				System.out.println("Hi");
				String a = rs.getInt(3)+"/"+rs.getInt(4)+"/"+rs.getInt(5);
				data.add(new DisplayDailyInput(rs.getInt(1) + "",rs.getString(2),a,rs.getDouble(6)+"",""+rs.getString(9),rs.getString(10),rs.getString(11),rs.getDouble(12)+"",rs.getInt(13)+"",rs.getInt(14)+"",rs.getInt(15)+"",rs.getInt(16)+"", rs.getDouble(17) + ""));
			}
		 } 
		catch (SQLException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		tableDisplay.setItems(data);
	}
	
		// Event Listener on Button.onAction
		@FXML
		public void show1(ActionEvent event) 
		{
			// TODO Autogenerated
			int dd1=Integer.parseInt(dd.getText());
			int mm1=Integer.parseInt(mm.getText());
			int yy1=Integer.parseInt(yy.getText());
			
				for(int i=0;i<tableDisplay.getItems().size();i++) 
				{
					tableDisplay.getItems().clear();
				}
				setCellTable();
				loadDataFromDatabase1();
			
		}
		private void loadDataFromDatabase1() 
		{
			try 
			{
				int dd1=Integer.parseInt(dd.getText());
				int mm1=Integer.parseInt(mm.getText());
				int yy1=Integer.parseInt(yy.getText());
				
				//String query = "delete from displaymonthly where id = ? and date=?";
				//PreparedStatement ps = (PreparedStatement) conn.prepareStatement(query);
				//ps.setInt (1, id1);
				//ps.setString (2, date1);
				//ps.execute();
				
				PreparedStatement  ps=con.prepareStatement("Select * from dailyinput where dd=? and mm=? and yyyy=?");
				ps.setInt (1, dd1);
				ps.setInt (2, mm1);
				ps.setInt(3, yy1);
				rs=ps.executeQuery();
				/*if(rs.next()==false)
				{
					Stage dialogStage = new Stage();
				    dialogStage.initModality(Modality.WINDOW_MODAL);

				    VBox vbox = new VBox(new Text("Record not found for given employee ID"));
				    vbox.setAlignment(Pos.CENTER);
				    vbox.setPadding(new Insets(15));
				    vbox.setPrefSize(400, 100);

				    dialogStage.setScene(new Scene(vbox));
				    dialogStage.show();
					
				}*/
				while(rs.next())
				{
					String a = rs.getInt(3)+"/"+rs.getInt(4)+"/"+rs.getInt(5);
					data.add(new DisplayDailyInput(rs.getInt(1) + "",rs.getString(2),a,rs.getDouble(6)+"",""+rs.getString(9),rs.getString(10),rs.getString(11),rs.getDouble(12)+"",rs.getInt(13)+"",rs.getInt(14)+"",rs.getInt(15)+"",rs.getInt(16)+"", rs.getDouble(17) + ""));
				}
			 } 
			catch (SQLException e) 
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			tableDisplay.setItems(data);
		}
}
